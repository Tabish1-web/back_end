# Generated by Django 4.0.1 on 2022-02-25 03:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TwitterPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.IntegerField(blank=True, null=True)),
                ('reply_id', models.IntegerField(blank=True, null=True)),
                ('tweet', models.TextField(unique=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Completed')], default='C', max_length=1)),
                ('favorite_count', models.IntegerField(blank=True, null=True)),
                ('retweet_count', models.IntegerField(blank=True, null=True)),
                ('truncated', models.BooleanField(default=False)),
                ('post_time', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twitter_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RedditPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reddit_id', models.CharField(blank=True, max_length=20, null=True)),
                ('reply_id', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(max_length=555)),
                ('sub_reddit', models.CharField(max_length=255)),
                ('link', models.URLField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('nsfw', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Completed')], default='C', max_length=1)),
                ('approved', models.BooleanField(default=False)),
                ('comments_count', models.IntegerField(null=True)),
                ('locked', models.BooleanField(default=False)),
                ('saved', models.BooleanField(default=False)),
                ('spam', models.BooleanField(default=False)),
                ('view_count', models.IntegerField(default=False)),
                ('upvote_ratio', models.FloatField(blank=True, null=True)),
                ('awards_received', models.IntegerField(blank=True, null=True)),
                ('spoiler', models.BooleanField(default=False)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('post_time', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reddit_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(blank=True, max_length=10, null=True)),
                ('media_id', models.BigIntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to='uploads/media')),
                ('reddit', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media', to='post.redditpost')),
                ('tweet', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media', to='post.twitterpost')),
            ],
        ),
    ]
